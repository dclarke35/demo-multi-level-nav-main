body {
    font-family: sans-serif;
}

header {
    max-width: 58rem;
    margin: 0 auto;
}

/* Step 1 - Style menu links for small screen */

ul.menu {
    background-color: #191919;
}

ul.menu li {
    line-height: 2.5rem;
    margin-bottom: .5rem;
}

ul.menu a {
    color: #f5f5f5;
    text-transform: uppercase;
    display: block;
    padding: 0 1rem;
}

ul.menu a:hover,
ul.menu a:active {
    background-color: #404040;
    border-radius: 5px;
}

ul.submenu {
    padding: 0 1rem;

}

ul.submenu a {
    text-decoration: none;
}

svg {
    display: none;
}

@media screen and (min-width: 58rem) {
    ul.menu {
        display: flex;
        justify-content: space-between;
    }

    ul.menu li {
        flex: 1 0 auto;
        text-align: center;
        margin-bottom: 0;
        /* Allows us to position the dropdown absolutely but relative to this element. */
        position: relative;
    }

    li.dropdown a {
        display: flex;
        justify-content: center;
        gap: .5rem;
    }

    svg {
        width: 1rem;
        display: block;
    }

    svg path {
        fill: #f5f5f5;
    }

    /* Step 2 - Postition and hide the dropdown submenu */
    ul.submenu {
        padding: 0;
        position: absolute;
        right: 0;
        visibility: hidden;
        opacity: 0;
        background-color: #191919;
        border-radius: 0 0 5px 5px;
    }

    /* Step 3 - Add a hover state that will show the submenu */
    ul.menu li:hover > ul.submenu {
        visibility: visible;
        opacity: 1;
    }

    /* Step 4 - Add transition to remove the clunkiness */
    ul.submenu {
        transition: all 0.5s ease;
    }

    /* Step 5 - Add a keyboard accessibility using a focus-within state */
    /* https://webaim.org/techniques/keyboard */
    ul.menu li:focus-within > ul,
    ul.menu ul:focus-within  {
        visibility: visible;
        opacity: 1;
        display: block;
    }

}